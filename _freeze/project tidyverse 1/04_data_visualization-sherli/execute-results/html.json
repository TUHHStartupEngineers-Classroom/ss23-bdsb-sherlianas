{
  "hash": "e1a9f999386c37b93b9b55b678bd4973",
  "result": {
    "markdown": "# DATA VISUALIZATION \n\n# SHERLIANA SETIAWAN - 534820 - CHEMICAL AND BIOPROCESS ENGINEERING (M.Sc)\n\n# Challenge 1: \n## Map the time course of the cumulative Covid-19 cases.\n\n\n::: {.cell hash='04_data_visualization-sherli_cache/html/unnamed-chunk-1_47369751acae9120ee39ab812345dc85'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(tidyr)\n\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 311581 Columns: 67\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): iso_code, continent, location, tests_units\ndbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\ndate  (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nshow_col_types = FALSE\n\ncovid_data_tbl <- covid_data_tbl[order(as.Date(covid_data_tbl$date, format=\"%d/%m/%Y\")),]\n\n\ncovid_data_tbl <- covid_data_tbl %>%\n  mutate_if(is.numeric,~replace_na(.,0))\n\n\ncovid_data_tbl2 <- covid_data_tbl %>%\n  filter(location %in% c('Spain', 'United Kingdom', 'France', 'Germany','United States')) %>%\n  select(date, location, total_cases) %>%\n  group_by(location) %>%\n  mutate(cumulativeCases = cumsum(total_cases))  %>%\n  select(date, location, cumulativeCases) %>%\n  rename(countries = location)\n\n\n\n# Plot \nticks = c(\"Dec\",\"Jan\", 'Feb','March', 'April', 'May', 'June','July',\n          'Aug','Sept','Oct','Nov','Dec')\n\ny_ticks = seq(0,max(covid_data_tbl2$cumulativeCases, na.rm = TRUE, finite = TRUE),50000000)\ncovid_data_tbl2 %>%\n  ggplot(aes(x = as.POSIXct(date, format = '%d/%m/%Y'), y = cumulativeCases)) +\n  geom_line(aes(color = countries), size = 1) +\n  labs(x = 'Year 2020', y='Cumulative Cases', fill = 'Countries') +\n  scale_x_datetime(date_breaks = 'month', labels = label_date_short()) +\n  scale_y_continuous(breaks=c(y_ticks))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n:::\n\n::: {.cell-output-display}\n![](04_data_visualization-sherli_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\n# Challenge: \n## Visualize the distribution of the mortality rate (deaths / population).\n\n\n::: {.cell hash='04_data_visualization-sherli_cache/html/unnamed-chunk-2_ad0641740a6d69a68ea1f734c2941c98'}\n\n```{.r .cell-code}\nlibrary(maps)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'maps'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:purrr':\n\n    map\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\ntheme_set(\n  theme_dark()\n)\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 311581 Columns: 67\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (4): iso_code, continent, location, tests_units\ndbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\ndate  (1): date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nworld <- map_data('world') %>%\n  rename(countries = region) %>%\n  dplyr::select(countries,long,lat,group) \n  \ncovid_data_tbl <- covid_data_tbl %>%\n  mutate(across(location, str_replace_all, \"_\", \" \")) %>%\n  mutate(location = case_when(\n    \n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States of America\" ~ \"USA\",\n    location == \"Czechia\" ~ \"Czech Republic\",\n    TRUE ~ location\n    \n  ))\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `across(location, str_replace_all, \"_\", \" \")`.\nCaused by warning:\n! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\nSupply arguments directly to `.fns` through an anonymous function instead.\n\n  # Previously\n  across(a:b, mean, na.rm = TRUE)\n\n  # Now\n  across(a:b, \\(x) mean(x, na.rm = TRUE))\n```\n:::\n\n```{.r .cell-code}\npopulation <- covid_data_tbl %>%\n  group_by(location) %>%\n  dplyr::select(location, population) %>%\n  unique() %>%\n  rename(countries = location)\n\ncovid_data_tbl <- covid_data_tbl %>%\n  mutate_if(is.numeric,~replace_na(.,0))\n\nmortality_rate_tbl <- covid_data_tbl %>%\n  group_by(location) %>%\n  summarise( \n    total_deaths = sum(new_deaths)\n    ) %>%\n  rename(countries = location)\n\nuseful_map <- left_join(population,mortality_rate_tbl, by = \"countries\")\nfinal_tbl <- left_join(world, useful_map, by = 'countries') %>%\n  mutate(mort_rate = total_deaths / population)\n#plotting the values\nggplot(final_tbl, aes(long, lat, group = group))+\n  geom_polygon(aes(fill = mort_rate), color = \"white\")+\n  scale_fill_gradient(low = 'pink', high = 'red', na.value = 'white')\n```\n\n::: {.cell-output-display}\n![](04_data_visualization-sherli_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
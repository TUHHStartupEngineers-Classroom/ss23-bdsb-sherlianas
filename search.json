[
  {
    "objectID": "content/01_journal/01_tidyverse.html",
    "href": "content/01_journal/01_tidyverse.html",
    "title": "Tidyverse",
    "section": "",
    "text": "# SALES ANALYSIS ----\n\n# 1.0 Load libraries ----\ninstall.packages(\"devtools\", repos = \"http://cran.rstudio.com\")\n\n#&gt; Installing package into 'C:/Users/USER/AppData/Local/R/win-library/4.3'\n#&gt; (as 'lib' is unspecified)\n\n\n#&gt; package 'devtools' successfully unpacked and MD5 sums checked\n#&gt; \n#&gt; The downloaded binary packages are in\n#&gt;  C:\\Users\\USER\\AppData\\Local\\Temp\\Rtmpy6OZ5w\\downloaded_packages\n\nlibrary(tidyverse)\n\n#&gt; ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.1\n\n\n#&gt; ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# 2.0 Importing Files ----\nbikes_tbl      &lt;- readxl::read_excel(path=\"C:/Users/USER/OneDrive/Pictures/Documents/GitHub/ss23-bdsb-sherlianas/content/data/ds_data/01_bike_sales/01_raw_data/bikes.xlsx\")\n\n\norderlines_tbl &lt;- readxl::read_excel(path = \"C:/Users/USER/OneDrive/Pictures/Documents/GitHub/ss23-bdsb-sherlianas/content/data/ds_data/01_bike_sales/01_raw_data/orderlines.xlsx\")\n\n#&gt; New names:\n#&gt; • `` -&gt; `...1`\n\nbikeshops_tbl  &lt;- readxl::read_excel(path = \"C:/Users/USER/OneDrive/Pictures/Documents/GitHub/ss23-bdsb-sherlianas/content/data/ds_data/01_bike_sales/01_raw_data/bikeshops.xlsx\")\n\n# 3.0 Examining Data ----\norderlines_tbl\n\n\n\n  \n\n\nglimpse(orderlines_tbl)\n\n#&gt; Rows: 15,644\n#&gt; Columns: 7\n#&gt; $ ...1        &lt;chr&gt; \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"…\n#&gt; $ order.id    &lt;dbl&gt; 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7, 7…\n#&gt; $ order.line  &lt;dbl&gt; 1, 2, 1, 2, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 1, 2, 3, 4, 1, 2…\n#&gt; $ order.date  &lt;dttm&gt; 2015-01-07, 2015-01-07, 2015-01-10, 2015-01-10, 2015-01-1…\n#&gt; $ customer.id &lt;dbl&gt; 2, 2, 10, 10, 6, 6, 6, 6, 6, 22, 8, 8, 8, 8, 16, 16, 16, 1…\n#&gt; $ product.id  &lt;dbl&gt; 2681, 2411, 2629, 2137, 2367, 1973, 2422, 2655, 2247, 2408…\n#&gt; $ quantity    &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1…\n\n# 4.0 Joining Data ----\ndplyr::left_join(orderlines_tbl, bikes_tbl, by = c(\"product.id\" = \"bike.id\"))\n\n\n\n  \n\n\nbike_orderlines_joined_tbl &lt;- orderlines_tbl %&gt;%\n  dplyr::left_join(bikes_tbl, by = c(\"product.id\" = \"bike.id\")) %&gt;%\n  dplyr::left_join(bikeshops_tbl, by = c(\"customer.id\" = \"bikeshop.id\"))\n\nbike_orderlines_joined_tbl %&gt;% glimpse()\n\n#&gt; Rows: 15,644\n#&gt; Columns: 19\n#&gt; $ ...1           &lt;chr&gt; \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\"…\n#&gt; $ order.id       &lt;dbl&gt; 1, 1, 2, 2, 3, 3, 3, 3, 3, 4, 5, 5, 5, 5, 6, 6, 6, 6, 7…\n#&gt; $ order.line     &lt;dbl&gt; 1, 2, 1, 2, 1, 2, 3, 4, 5, 1, 1, 2, 3, 4, 1, 2, 3, 4, 1…\n#&gt; $ order.date     &lt;dttm&gt; 2015-01-07, 2015-01-07, 2015-01-10, 2015-01-10, 2015-0…\n#&gt; $ customer.id    &lt;dbl&gt; 2, 2, 10, 10, 6, 6, 6, 6, 6, 22, 8, 8, 8, 8, 16, 16, 16…\n#&gt; $ product.id     &lt;dbl&gt; 2681, 2411, 2629, 2137, 2367, 1973, 2422, 2655, 2247, 2…\n#&gt; $ quantity       &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1…\n#&gt; $ model          &lt;chr&gt; \"Spectral CF 7 WMN\", \"Ultimate CF SLX Disc 8.0 ETAP\", \"…\n#&gt; $ model.year     &lt;dbl&gt; 2021, 2020, 2021, 2019, 2020, 2020, 2020, 2021, 2020, 2…\n#&gt; $ frame.material &lt;chr&gt; \"carbon\", \"carbon\", \"carbon\", \"carbon\", \"aluminium\", \"c…\n#&gt; $ weight         &lt;dbl&gt; 13.80, 7.44, 14.06, 8.80, 11.50, 8.80, 8.20, 8.85, 14.4…\n#&gt; $ price          &lt;dbl&gt; 3119, 5359, 2729, 1749, 1219, 1359, 2529, 1559, 3899, 6…\n#&gt; $ category       &lt;chr&gt; \"Mountain - Trail - Spectral\", \"Road - Race - Ultimate\"…\n#&gt; $ gender         &lt;chr&gt; \"female\", \"unisex\", \"unisex\", \"unisex\", \"unisex\", \"unis…\n#&gt; $ url            &lt;chr&gt; \"https://www.canyon.com/en-de/mountain-bikes/trail-bike…\n#&gt; $ name           &lt;chr&gt; \"AlexandeRad\", \"AlexandeRad\", \"WITT-RAD\", \"WITT-RAD\", \"…\n#&gt; $ location       &lt;chr&gt; \"Hamburg, Hamburg\", \"Hamburg, Hamburg\", \"Bremen, Bremen…\n#&gt; $ lat            &lt;dbl&gt; 53.57532, 53.57532, 53.07379, 53.07379, 48.78234, 48.78…\n#&gt; $ lng            &lt;dbl&gt; 10.015340, 10.015340, 8.826754, 8.826754, 9.180819, 9.1…\n\n# 5.0 Wrangling Data ----\nbike_orderlines_joined_tbl %&gt;% \n  select(category) %&gt;%\n  filter(str_detect(category, \"^Mountain\")) %&gt;% \n  unique()\n\n\n\n  \n\n\nbike_orderlines_wrangled_tbl &lt;- bike_orderlines_joined_tbl %&gt;%\n  \n  separate(col    = category,\n           into   = c(\"category.1\", \"category.2\", \"category.3\"),\n           sep    = \" - \") %&gt;%\n  \n  mutate(total.price = price * quantity) %&gt;%\n  \n  select(-...1, -gender) %&gt;%\n  \n  select(-ends_with(\".id\")) %&gt;%\n  \n  bind_cols(bike_orderlines_joined_tbl %&gt;% select(order.id)) %&gt;% \n  \n  select(order.id, contains(\"order\"), contains(\"model\"), contains(\"category\"),\n         price, quantity, total.price,\n         everything()) %&gt;%\n  \n  rename(bikeshop = name) %&gt;%\n  set_names(names(.) %&gt;% str_replace_all(\"\\\\.\", \"_\"))\n\n\n# 6.0 Splitting location into city and state   ----\nbike_orderlines_wrangled_tbl &lt;- bike_orderlines_wrangled_tbl %&gt;%\n  separate(col= \"location\", into = c(\"city\", \"state\"), sep = \",\")\n\n# 7.0 Highest revenue  ----\nrevenue_by_state &lt;- bike_orderlines_wrangled_tbl %&gt;% \n  group_by(state) %&gt;% \n  summarize(total_revenue = sum(total_price))\n\n# 7.1 Bar plot revenue by state  ----\n# aes --&gt; aestethic; geom_bar(stat=\"identity\") --&gt; R will calculate the sum of y variable, grouped by the x variable and use ar to display the sum.\n# geom_bar() --&gt; makes the height of the bar proportional to the number of cases in each group\n# xlab & ylab --&gt; the text for axis label; ggtitle() --&gt; to add overall plot title\n# theme(axis.text.x = element_text(angle=45, hjust=1)) --&gt; to rotate yout x-axis laels\nggplot(revenue_by_state, aes(x=state, y=total_revenue)) + \n  geom_bar(stat=\"identity\") + \n  xlab(\"state\") +\n  ylab(\"total revenue\") + \n  ggtitle(\"total revenue by state\")+\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n# 7.2 State with the highest revenue ----\nrevenue_by_state %&gt;% \n  filter(total_revenue == max(total_revenue))\n\n\n\n  \n\n\n#8.0 Writing files ----\n#8.1 Excel ----\ninstall.packages(\"devtools\", repos = \"http://cran.rstudio.com\")\n\n#&gt; Installing package into 'C:/Users/USER/AppData/Local/R/win-library/4.3'\n#&gt; (as 'lib' is unspecified)\n\n\n#&gt; package 'devtools' successfully unpacked and MD5 sums checked\n#&gt; \n#&gt; The downloaded binary packages are in\n#&gt;  C:\\Users\\USER\\AppData\\Local\\Temp\\Rtmpy6OZ5w\\downloaded_packages\n\nlibrary(\"writexl\")\nbike_orderlines_wrangled_tbl %&gt;% \n  write_xlsx(\"C:/Users/USER/OneDrive/Pictures/Documents/GitHub/ss23-bdsb-sherlianas/content/bike_orderlines_by_state.xlsx\")\n\n# 7.2 CSV ----\nbike_orderlines_wrangled_tbl%&gt;%\n  write_csv(\"C:/Users/USER/OneDrive/Pictures/Documents/GitHub/ss23-bdsb-sherlianas/content/bike_orderlines_by_state.csv\")\n\n# 7.3 RDS ----\nbike_orderlines_wrangled_tbl%&gt;% \n  write_rds(\"C:/Users/USER/OneDrive/Pictures/Documents/GitHub/ss23-bdsb-sherlianas/content/bike_orderlines_by_state.rds\")"
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html",
    "href": "content/01_journal/03_data_wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "# LOAD LIBRARIES\ninstall.packages(\"devtools\", repos = \"http://cran.rstudio.com\")\n\n#&gt; Installing package into 'C:/Users/USER/AppData/Local/R/win-library/4.3'\n#&gt; (as 'lib' is unspecified)\n\n\n#&gt; package 'devtools' successfully unpacked and MD5 sums checked\n#&gt; \n#&gt; The downloaded binary packages are in\n#&gt;  C:\\Users\\USER\\AppData\\Local\\Temp\\Rtmpq8agFF\\downloaded_packages\n\nlibrary(vroom)\nlibrary(tictoc)\nlibrary(tidyverse)\n\n#&gt; ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.1\n\n\n#&gt; ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ readr::col_character()   masks vroom::col_character()\n#&gt; ✖ readr::col_date()        masks vroom::col_date()\n#&gt; ✖ readr::col_datetime()    masks vroom::col_datetime()\n#&gt; ✖ readr::col_double()      masks vroom::col_double()\n#&gt; ✖ readr::col_factor()      masks vroom::col_factor()\n#&gt; ✖ readr::col_guess()       masks vroom::col_guess()\n#&gt; ✖ readr::col_integer()     masks vroom::col_integer()\n#&gt; ✖ readr::col_logical()     masks vroom::col_logical()\n#&gt; ✖ readr::col_number()      masks vroom::col_number()\n#&gt; ✖ readr::col_skip()        masks vroom::col_skip()\n#&gt; ✖ readr::col_time()        masks vroom::col_time()\n#&gt; ✖ readr::cols()            masks vroom::cols()\n#&gt; ✖ readr::date_names_lang() masks vroom::date_names_lang()\n#&gt; ✖ readr::default_locale()  masks vroom::default_locale()\n#&gt; ✖ dplyr::filter()          masks stats::filter()\n#&gt; ✖ readr::fwf_cols()        masks vroom::fwf_cols()\n#&gt; ✖ readr::fwf_empty()       masks vroom::fwf_empty()\n#&gt; ✖ readr::fwf_positions()   masks vroom::fwf_positions()\n#&gt; ✖ readr::fwf_widths()      masks vroom::fwf_widths()\n#&gt; ✖ dplyr::lag()             masks stats::lag()\n#&gt; ✖ readr::locale()          masks vroom::locale()\n#&gt; ✖ readr::output_column()   masks vroom::output_column()\n#&gt; ✖ readr::problems()        masks vroom::problems()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(data.table)\n\n#&gt; \n#&gt; Attaching package: 'data.table'\n#&gt; \n#&gt; The following objects are masked from 'package:lubridate':\n#&gt; \n#&gt;     hour, isoweek, mday, minute, month, quarter, second, wday, week,\n#&gt;     yday, year\n#&gt; \n#&gt; The following objects are masked from 'package:dplyr':\n#&gt; \n#&gt;     between, first, last\n#&gt; \n#&gt; The following object is masked from 'package:purrr':\n#&gt; \n#&gt;     transpose\n#&gt; \n#&gt; The following object is masked from 'package:tictoc':\n#&gt; \n#&gt;     shift\n\n# SPECIFY COLUMNS TYPES\ncol_types &lt;- list(\n  id = col_character(),\n  type = col_character(),\n  number = col_character(),\n  country = col_character(),\n  date = col_date(\"%Y-%m-%d\"),\n  abstract = col_character(),\n  title = col_character(),\n  kind = col_character(),\n  num_claims = col_double(),\n  filename = col_character(),\n  withdrawn = col_double()\n)\n\n# IMPORT DATA\npatent_tbl &lt;- vroom(\n  file       = \"C:/Users/USER/OneDrive/Pictures/Documents/GitHub/ss23-bdsb-sherlianas/content/data/Patent_data_reduced/patent.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\n#&gt; Warning: The following named parsers don't match the column names: type,\n#&gt; number, country, abstract, title, kind, filename, withdrawn\n\npatent_assignee_tbl &lt;- vroom(\n  file       = \"C:/Users/USER/OneDrive/Pictures/Documents/GitHub/ss23-bdsb-sherlianas/content/data/Patent_data_reduced/patent_assignee.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\n#&gt; Warning: The following named parsers don't match the column names: id, type,\n#&gt; number, country, date, abstract, title, kind, num_claims, filename, withdrawn\n\nassignee_tbl &lt;- vroom(\n  file       = \"C:/Users/USER/OneDrive/Pictures/Documents/GitHub/ss23-bdsb-sherlianas/content/data/Patent_data_reduced/assignee.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\n#&gt; Warning: The following named parsers don't match the column names: number,\n#&gt; country, date, abstract, title, kind, num_claims, filename, withdrawn\n\nuspc_tbl &lt;- vroom(\n  file       = \"C:/Users/USER/OneDrive/Pictures/Documents/GitHub/ss23-bdsb-sherlianas/content/data/Patent_data_reduced/uspc.tsv\", \n  delim      = \"\\t\", \n  col_types  = col_types,\n  na         = c(\"\", \"NA\", \"NULL\")\n)\n\n#&gt; Warning: The following named parsers don't match the column names: id, type,\n#&gt; number, country, date, abstract, title, kind, num_claims, filename, withdrawn\n\n# CONVERT DATA TO DATA.TABLE\nclass(assignee_tbl)\n\n#&gt; [1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\"\n\nsetDT(assignee_tbl)\nclass(patent_assignee_tbl)\n\n#&gt; [1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\"\n\nsetDT(patent_assignee_tbl)\nclass(patent_tbl)\n\n#&gt; [1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\"\n\nsetDT(patent_tbl)\n\n\n## Question 1: Patent Dominance \n## What US Corporation has the most patent? List the 10 US corporation with the most assigned patents.\n\n### join data\ntic()\nQ1_patent_data_combined &lt;- merge(x = patent_assignee_tbl, y = assignee_tbl, \n                       by.x=\"assignee_id\", by.y =\"id\",\n                       all.x = TRUE, \n                       all.y = FALSE)\ntoc()\n\n#&gt; 0.3 sec elapsed\n\nsetkey(Q1_patent_data_combined, \"assignee_id\")\nkey(Q1_patent_data_combined)\n\n#&gt; [1] \"assignee_id\"\n\nQ1_patent_data_combined %&gt;% dim()\n\n#&gt; [1] 315910      4\n\nkeep_cols &lt;- c(\"assignee_id\",\"patent_id\",\"organization\")\nQ1_patent_data_combined &lt;- Q1_patent_data_combined[, ..keep_cols]\nQ1_patent_data_combined %&gt;% dim()\n\n#&gt; [1] 315910      3\n\nQ1_patent_data_combined %&gt;% glimpse()\n\n#&gt; Rows: 315,910\n#&gt; Columns: 3\n#&gt; $ assignee_id  &lt;chr&gt; \"org_004j997jM9yEdS7z4ReD\", \"org_004j997jM9yEdS7z4ReD\", \"…\n#&gt; $ patent_id    &lt;chr&gt; \"8728438\", \"8921361\", \"8857791\", \"8845559\", \"8815936\", \"8…\n#&gt; $ organization &lt;chr&gt; \"University of Basel\", \"University of Basel\", \"Zetkama Sp…\n\ntic()\nCount_Q1&lt;- Q1_patent_data_combined %&gt;%\n  filter(!is.na(organization)) %&gt;%\n  count(organization)%&gt;% arrange(desc(n))\ntoc()\n\n#&gt; 0.5 sec elapsed\n\nhead(Count_Q1,10)"
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html#answer-for-question-1-international-business-machines-corporation-has-the-most-assigned-patent-with-7547-patents.",
    "href": "content/01_journal/03_data_wrangling.html#answer-for-question-1-international-business-machines-corporation-has-the-most-assigned-patent-with-7547-patents.",
    "title": "Data Wrangling",
    "section": "\n1 Answer for Question 1 –> International Business Machines Corporation has the most assigned patent with 7547 patents.",
    "text": "1 Answer for Question 1 –&gt; International Business Machines Corporation has the most assigned patent with 7547 patents."
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html#top-10-is-listed-in-the-table",
    "href": "content/01_journal/03_data_wrangling.html#top-10-is-listed-in-the-table",
    "title": "Data Wrangling",
    "section": "\n2 Top 10 is listed in the table",
    "text": "2 Top 10 is listed in the table\n\n\n\n\n## Question 2: Recent Patent Activity ## What US Corporation had the most patents granted in August 2014? List the 10 companies with the new granted patents for August 2014\n\n\n::: {.cell hash=‘03_data_wrangling_cache/html/unnamed-chunk-2_71bbde58aa9f4dcf6581208b9da51c3e’}\n\n\n{.r .cell-code} class(patent_tbl)\n\n\n::: {.cell-output .cell-output-stdout}\n\n\n```{.r .cell-code} setDT(patent_tbl)\n\n\ntic() Q2_patent_data_combined &lt;- merge(x = patent_tbl, y = Q1_patent_data_combined, by.x=“id”, by.y =“patent_id”, all.x = TRUE, all.y = FALSE) toc() ```\n\n\n::: {.cell-output .cell-output-stdout}\n\n\n```{.r .cell-code} ## Time frame –&gt; 2014-08-01 - 2014-08-31\n\n\nQ2_Aug2014_patent_data_combined&lt;- with(Q2_patent_data_combined, Q2_patent_data_combined[(date &gt;= “2014-08-01” & date &lt;= “2014-08-31”) ])\n\n\ntic() Q2_top_Aug2014 &lt;- Q2_Aug2014_patent_data_combined %&gt;% filter(!is.na(organization)) %&gt;% count(organization)%&gt;% arrange(desc(n)) toc() ```\n\n\n::: {.cell-output .cell-output-stdout}\n\n\n{.r .cell-code} #TOP US company with most patents in Aug 2014 head(Q2_top_Aug2014,1)\n\n\n::: {.cell-output-display}\n\n\n{=html} &lt;div data-pagedtable=\"false\"&gt; &lt;script data-pagedtable-source type=\"application/json\"&gt; {\"columns\":[{\"label\":[\"organization\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"International Business Machines Corporation\",\"2\":\"718\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}} &lt;/script&gt; &lt;/div&gt;\n\n\n:::\n\n\n{.r .cell-code} #Top 10 companies with most new granted patents in Aug 2014 head(Q2_top_Aug2014,10)\n\n\n::: {.cell-output-display}\n\n\n{=html} &lt;div data-pagedtable=\"false\"&gt; &lt;script data-pagedtable-source type=\"application/json\"&gt; {\"columns\":[{\"label\":[\"organization\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"International Business Machines Corporation\",\"2\":\"718\"},{\"1\":\"Samsung Electronics Co., Ltd.\",\"2\":\"524\"},{\"1\":\"Canon Kabushiki Kaisha\",\"2\":\"361\"},{\"1\":\"Microsoft Corporation\",\"2\":\"337\"},{\"1\":\"Sony Corporation\",\"2\":\"269\"},{\"1\":\"Google Inc.\",\"2\":\"240\"},{\"1\":\"QUALCOMM Incorporated\",\"2\":\"223\"},{\"1\":\"Apple Inc.\",\"2\":\"222\"},{\"1\":\"Kabushiki Kaisha Toshiba\",\"2\":\"213\"},{\"1\":\"LG Electronics Inc.\",\"2\":\"211\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}} &lt;/script&gt; &lt;/div&gt;\n\n\n:::\n\n\n\n{.r .cell-code} ## Answer for Question 2 ## 2.1. TOP US company with most patents in Aug 2014 --&gt; International Business Machines Corporation with 718 granted patents in AUgust 2014 ## Top 10 companies is listed in the table :::"
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html#question-3-innovation-in-tech",
    "href": "content/01_journal/03_data_wrangling.html#question-3-innovation-in-tech",
    "title": "Data Wrangling",
    "section": "\n3 Question 3: Innovation in Tech",
    "text": "3 Question 3: Innovation in Tech"
  },
  {
    "objectID": "content/01_journal/03_data_wrangling.html#what-is-the-most-innovative-tech-sector-for-the-top-10-companies-worldwide-with-the-most-patents-what-are-the-top-5-uspto-tech-main-classes",
    "href": "content/01_journal/03_data_wrangling.html#what-is-the-most-innovative-tech-sector-for-the-top-10-companies-worldwide-with-the-most-patents-what-are-the-top-5-uspto-tech-main-classes",
    "title": "Data Wrangling",
    "section": "\n4 What is the most innovative tech sector? For the top 10 companies worldwide with the most patents, what are the top 5 USPTO tech main classes?",
    "text": "4 What is the most innovative tech sector? For the top 10 companies worldwide with the most patents, what are the top 5 USPTO tech main classes?\n\n### join data\ntic()\nQ3_patent_all &lt;- merge(x = uspc_tbl, y = Q1_patent_data_combined, \n                       by.x=\"patent_id\", by.y =\"patent_id\",\n                       all.x = TRUE, \n                       all.y = FALSE)\ntoc()\n\n#&gt; 5.33 sec elapsed\n\n#Most innovative class can be calculated by summing the total number of patents for each class\ntic()\nmostinnovative_class_Q3&lt;- Q3_patent_all %&gt;%\n  filter(!is.na(mainclass_id)) %&gt;%\n  count(mainclass_id)%&gt;% arrange(desc(n))\ntoc()\n\n#&gt; 0.12 sec elapsed\n\n#making a data frame of TOP 10 companies to investigate the top 5 USPTO\nQ3_top10 &lt;- Q3_patent_all[Q3_patent_all$organization %in% c('International Business Machines Corporation','Samsung Electronics Co., Ltd.','Canon Kabushiki Kaisha','Sony Corporation','Microsoft Corporation','Google Inc.','Kabushiki Kaisha Toshiba','QUALCOMM Incorporated','LG Electronics Inc.','Panasonic Corporation'),]\n\nQ3_top10$Company_Class &lt;- paste(Q3_top10$organization, Q3_top10$mainclass_id)\n\n# calculate the company class\ntic()\nQ3_top10_CC&lt;- Q3_top10 %&gt;%\n  count(Company_Class)%&gt;% arrange(desc(n))\ntoc()\n\n#&gt; 0.02 sec elapsed\n\n#displaying the most innovative class and its corresponding number of patents of that class\nhead(mostinnovative_class_Q3,1)\n\n\n\n  \n\n\n#Shows the top 5 USPTO Classes from the top 10 companies granted patents\nhead(Q3_top10_CC,5)\n\n\n\n  \n\n\n#Answer for Question 3:\n## Most innovative class --&gt; main class id 257 \n#TOP 5 USPTO Classes from top 10 companies: listed in the table"
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html",
    "href": "content/01_journal/04_data_visualization.html",
    "title": "Data Visualization",
    "section": "",
    "text": "library(tidyverse)\n\n#&gt; ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.1     \n#&gt; ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(scales)\n\n#&gt; \n#&gt; Attaching package: 'scales'\n#&gt; \n#&gt; The following object is masked from 'package:purrr':\n#&gt; \n#&gt;     discard\n#&gt; \n#&gt; The following object is masked from 'package:readr':\n#&gt; \n#&gt;     col_factor\n\nlibrary(tidyr)\n\ncovid_data_tbl &lt;- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n\n#&gt; Rows: 311581 Columns: 67\n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; chr   (4): iso_code, continent, location, tests_units\n#&gt; dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#&gt; date  (1): date\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nshow_col_types = FALSE\n\ncovid_data_tbl &lt;- covid_data_tbl[order(as.Date(covid_data_tbl$date, format=\"%d/%m/%Y\")),]\n\n\ncovid_data_tbl &lt;- covid_data_tbl %&gt;%\n  mutate_if(is.numeric,~replace_na(.,0))\n\n\ncovid_data_tbl2 &lt;- covid_data_tbl %&gt;%\n  filter(location %in% c('Spain', 'United Kingdom', 'France', 'Germany','United States')) %&gt;%\n  select(date, location, total_cases) %&gt;%\n  group_by(location) %&gt;%\n  mutate(cumulativeCases = cumsum(total_cases))  %&gt;%\n  select(date, location, cumulativeCases) %&gt;%\n  rename(countries = location)\n\n\n\n# Plot \nticks = c(\"Dec\",\"Jan\", 'Feb','March', 'April', 'May', 'June','July',\n          'Aug','Sept','Oct','Nov','Dec')\n\ny_ticks = seq(0,max(covid_data_tbl2$cumulativeCases, na.rm = TRUE, finite = TRUE),50000000)\ncovid_data_tbl2 %&gt;%\n  ggplot(aes(x = as.POSIXct(date, format = '%d/%m/%Y'), y = cumulativeCases)) +\n  geom_line(aes(color = countries), size = 1) +\n  labs(x = 'Year 2020', y='Cumulative Cases', fill = 'Countries') +\n  scale_x_datetime(date_breaks = 'month', labels = label_date_short()) +\n  scale_y_continuous(breaks=c(y_ticks))\n\n#&gt; Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#&gt; ℹ Please use `linewidth` instead."
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html#map-the-time-course-of-the-cumulative-covid-19-cases.",
    "href": "content/01_journal/04_data_visualization.html#map-the-time-course-of-the-cumulative-covid-19-cases.",
    "title": "Data Visualization",
    "section": "",
    "text": "library(tidyverse)\n\n#&gt; ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n#&gt; ✔ dplyr     1.1.2     ✔ readr     2.1.4\n#&gt; ✔ forcats   1.0.0     ✔ stringr   1.5.0\n#&gt; ✔ ggplot2   3.4.2     ✔ tibble    3.2.1\n#&gt; ✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n#&gt; ✔ purrr     1.0.1     \n#&gt; ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#&gt; ✖ dplyr::filter() masks stats::filter()\n#&gt; ✖ dplyr::lag()    masks stats::lag()\n#&gt; ℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\nlibrary(scales)\n\n#&gt; \n#&gt; Attaching package: 'scales'\n#&gt; \n#&gt; The following object is masked from 'package:purrr':\n#&gt; \n#&gt;     discard\n#&gt; \n#&gt; The following object is masked from 'package:readr':\n#&gt; \n#&gt;     col_factor\n\nlibrary(tidyr)\n\ncovid_data_tbl &lt;- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n\n#&gt; Rows: 311581 Columns: 67\n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; chr   (4): iso_code, continent, location, tests_units\n#&gt; dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#&gt; date  (1): date\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nshow_col_types = FALSE\n\ncovid_data_tbl &lt;- covid_data_tbl[order(as.Date(covid_data_tbl$date, format=\"%d/%m/%Y\")),]\n\n\ncovid_data_tbl &lt;- covid_data_tbl %&gt;%\n  mutate_if(is.numeric,~replace_na(.,0))\n\n\ncovid_data_tbl2 &lt;- covid_data_tbl %&gt;%\n  filter(location %in% c('Spain', 'United Kingdom', 'France', 'Germany','United States')) %&gt;%\n  select(date, location, total_cases) %&gt;%\n  group_by(location) %&gt;%\n  mutate(cumulativeCases = cumsum(total_cases))  %&gt;%\n  select(date, location, cumulativeCases) %&gt;%\n  rename(countries = location)\n\n\n\n# Plot \nticks = c(\"Dec\",\"Jan\", 'Feb','March', 'April', 'May', 'June','July',\n          'Aug','Sept','Oct','Nov','Dec')\n\ny_ticks = seq(0,max(covid_data_tbl2$cumulativeCases, na.rm = TRUE, finite = TRUE),50000000)\ncovid_data_tbl2 %&gt;%\n  ggplot(aes(x = as.POSIXct(date, format = '%d/%m/%Y'), y = cumulativeCases)) +\n  geom_line(aes(color = countries), size = 1) +\n  labs(x = 'Year 2020', y='Cumulative Cases', fill = 'Countries') +\n  scale_x_datetime(date_breaks = 'month', labels = label_date_short()) +\n  scale_y_continuous(breaks=c(y_ticks))\n\n#&gt; Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\n#&gt; ℹ Please use `linewidth` instead."
  },
  {
    "objectID": "content/01_journal/04_data_visualization.html#visualize-the-distribution-of-the-mortality-rate-deaths-population.",
    "href": "content/01_journal/04_data_visualization.html#visualize-the-distribution-of-the-mortality-rate-deaths-population.",
    "title": "Data Visualization",
    "section": "\n2.1 Visualize the distribution of the mortality rate (deaths / population).",
    "text": "2.1 Visualize the distribution of the mortality rate (deaths / population).\n\nlibrary(maps)\nlibrary(tidyverse)\nlibrary(dplyr)\nlibrary(lubridate)\nlibrary(ggplot2)\ntheme_set(\n  theme_dark()\n)\ncovid_data_tbl &lt;- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n\n#&gt; Rows: 311581 Columns: 67\n#&gt; ── Column specification ────────────────────────────────────────────────────────\n#&gt; Delimiter: \",\"\n#&gt; chr   (4): iso_code, continent, location, tests_units\n#&gt; dbl  (62): total_cases, new_cases, new_cases_smoothed, total_deaths, new_dea...\n#&gt; date  (1): date\n#&gt; \n#&gt; ℹ Use `spec()` to retrieve the full column specification for this data.\n#&gt; ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nworld &lt;- map_data('world') %&gt;%\n  rename(countries = region) %&gt;%\n  dplyr::select(countries,long,lat,group) \n  \ncovid_data_tbl &lt;- covid_data_tbl %&gt;%\n  mutate(across(location, str_replace_all, \"_\", \" \")) %&gt;%\n  mutate(location = case_when(\n    \n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n    \n  ))\n\n#&gt; Warning: There was 1 warning in `mutate()`.\n#&gt; ℹ In argument: `across(location, str_replace_all, \"_\", \" \")`.\n#&gt; Caused by warning:\n#&gt; ! The `...` argument of `across()` is deprecated as of dplyr 1.1.0.\n#&gt; Supply arguments directly to `.fns` through an anonymous function instead.\n#&gt; \n#&gt;   # Previously\n#&gt;   across(a:b, mean, na.rm = TRUE)\n#&gt; \n#&gt;   # Now\n#&gt;   across(a:b, \\(x) mean(x, na.rm = TRUE))\n\npopulation &lt;- covid_data_tbl %&gt;%\n  group_by(location) %&gt;%\n  dplyr::select(location, population) %&gt;%\n  unique() %&gt;%\n  rename(countries = location)\n\ncovid_data_tbl &lt;- covid_data_tbl %&gt;%\n  mutate_if(is.numeric,~replace_na(.,0))\n\nmortality_rate_tbl &lt;- covid_data_tbl %&gt;%\n  group_by(location) %&gt;%\n  summarise( \n    total_deaths = sum(new_deaths)\n    ) %&gt;%\n  rename(countries = location)\n\nuseful_map &lt;- left_join(population,mortality_rate_tbl, by = \"countries\")\nfinal_tbl &lt;- left_join(world, useful_map, by = 'countries') %&gt;%\n  mutate(mort_rate = total_deaths / population)\n#plotting the values\nggplot(final_tbl, aes(long, lat, group = group))+\n  geom_polygon(aes(fill = mort_rate), color = \"white\")+\n  scale_fill_gradient(low = 'pink', high = 'red', na.value = 'white')"
  },
  {
    "objectID": "content/02_notes/05_class_notes.html",
    "href": "content/02_notes/05_class_notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "IMPORTANT: You can delete everything in here and start fresh. You might want to start by not deleting anything above this line until you know what that stuff is doing.\nThis is an .qmd file. It is plain text with special features. Any time you write just like this, it will be compiled to normal text in the website. If you put a # in front of your text, it will create a top level-header."
  },
  {
    "objectID": "content/03_other/06_links.html",
    "href": "content/03_other/06_links.html",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual .\n\n\n\n\nGoogle is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "content/03_other/06_links.html#r-and-r-studio",
    "href": "content/03_other/06_links.html#r-and-r-studio",
    "title": "Links",
    "section": "",
    "text": "R is a free open-source programming language that can be used for statistical analysis, data-simulation, graphing, and lots of other stuff. Another free program is R-studio, that provides a nice graphic interface for R. Download R first, then download R-studio. Both can run on PCs, Macs or Linux. Students will be learning R in the stats labs using the lab manual ."
  },
  {
    "objectID": "content/03_other/06_links.html#additional-r-resources",
    "href": "content/03_other/06_links.html#additional-r-resources",
    "title": "Links",
    "section": "",
    "text": "Google is great, Google your problem\nStackoverflow is great, google will often take you there because someone has already asked your question, and someone else has answered, usually many people have answered your question many ways."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Lab Journal",
    "section": "",
    "text": "This is a template example for lab journaling. Students in the data science courses at the Institute of Entrepreneurship will use this template to learn R for business analytics. Students can replace this text as they wish."
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "My Lab Journal",
    "section": "How to use",
    "text": "How to use\n\nAccept the assignment and get your own github repo.\nBlog/journal what you are doing in R, by editing the .qmd files.\nSee the links page for lots of helpful links on learning R.\nChange everything to make it your own.\nMake sure to render you website everytime before you want to upload changes"
  }
]